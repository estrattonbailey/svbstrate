{
  // Default options
  'functions': true
}

/*
Stylus variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon_home_width;
}

The large array-like variables contain all information about a single icon
$icon_home = x y offset_x offset_y width height total_width total_height image_path;

At the bottom of this section, we provide information about the spritesheet itself
$spritesheet = width height image $spritesheet_sprites;
*/
{{#items}}
${{name}}_name = '{{name}}';
${{name}}_x = {{px.x}};
${{name}}_y = {{px.y}};
${{name}}_offset_x = {{px.offset_x}};
${{name}}_offset_y = {{px.offset_y}};
${{name}}_width = {{px.width}};
${{name}}_height = {{px.height}};
${{name}}_total_width = {{px.total_width}};
${{name}}_total_height = {{px.total_height}};
${{name}}_image = '{{{escaped_image}}}';
${{name}} = {{px.x}} {{px.y}} {{px.offset_x}} {{px.offset_y}} {{px.width}} {{px.height}} {{px.total_width}} {{px.total_height}} '{{{escaped_image}}}' '{{name}}';
{{/items}}
${{spritesheet_name}}_width = {{spritesheet.px.width}};
${{spritesheet_name}}_height = {{spritesheet.px.height}};
${{spritesheet_name}}_image = '{{{spritesheet.escaped_image}}}';
${{spritesheet_name}}_sprites ={{#items}} ${{name}}{{/items}};
${{spritesheet_name}} = {{spritesheet.px.width}} {{spritesheet.px.height}} '{{{spritesheet.escaped_image}}}' ${{spritesheet_name}}_sprites;

{{#options.functions}}
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  spriteWidth($icon_home)
}

.icon-email {
  sprite($icon_email)
}
*/
spriteWidth($sprite) {
  width: $sprite[4];
}

spriteHeight($sprite) {
  height: $sprite[5];
}

spritePosition($sprite) {
  background-position: $sprite[2] $sprite[3];
}

spriteImage($sprite) {
  background-image: url($sprite[8]);
}

sprite($sprite) {
  spriteImage($sprite)
  spritePosition($sprite)
  spriteWidth($sprite)
  spriteHeight($sprite)
}

/*
The `sprites` mixin generates identical output to the CSS template
  but can be overridden inside of Stylus

sprites($spritesheet_sprites);
*/
sprites($sprites) {
  for $sprite in $sprites {
    $sprite_name = $sprite[9];
    .{$sprite_name} {
      sprite($sprite);
    }
  }
}
{{/options.functions}}
