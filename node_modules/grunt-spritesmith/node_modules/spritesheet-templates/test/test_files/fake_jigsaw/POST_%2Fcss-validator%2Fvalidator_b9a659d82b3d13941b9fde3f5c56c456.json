{
  "request": {
    "httpVersion": "1.1",
    "headers": {
      "content-type": "multipart/form-data; boundary=--------------------------824783805053781152870165",
      "host": "localhost:1337",
      "connection": "keep-alive",
      "transfer-encoding": "chunked"
    },
    "trailers": {},
    "method": "POST",
    "url": "/css-validator/validator",
    "body": "----------------------------824783805053781152870165\r\nContent-Disposition: form-data; name=\"output\"\r\n\r\nsoap12\r\n----------------------------824783805053781152870165\r\nContent-Disposition: form-data; name=\"w3cUrl\"\r\n\r\nhttp://localhost:1337/css-validator/validator\r\n----------------------------824783805053781152870165\r\nContent-Disposition: form-data; name=\"highWaterMark\"\r\n\r\n1024000\r\n----------------------------824783805053781152870165\r\nContent-Disposition: form-data; name=\"text\"\r\n\r\n/*\nStylus variables are information about icon's compiled state, stored under its original file name\n\n.icon-home {\n  width: $icon_home_width;\n}\n\nThe large array-like variables contain all information about a single icon\n$icon_home = x y offset_x offset_y width height total_width total_height image_path;\n\nAt the bottom of this section, we provide information about the spritesheet itself\n$spritesheet = width height image $spritesheet_sprites;\n*/\n/*\nThe provided mixins are intended to be used with the array-like variables\n\n.icon-home {\n  spriteWidth($icon_home)\n}\n\n.icon-email {\n  sprite($icon_email)\n}\n*/\n/*\nThe `sprites` mixin generates identical output to the CSS template\n  but can be overridden inside of Stylus\n\nsprites($spritesheet_sprites);\n*/\n.feature {\n  height: 20px;\n  width: 20px;\n  background-image: url(\"nested/dir/spritesheet.png\");\n}\n.feature2 {\n  background-image: url(\"nested/dir/spritesheet.png\");\n  background-position: -10px -20px;\n  width: 20px;\n  height: 30px;\n}\n.sprite1 {\n  background-image: url(\"nested/dir/spritesheet.png\");\n  background-position: 0px 0px;\n  width: 10px;\n  height: 20px;\n}\n.sprite2 {\n  background-image: url(\"nested/dir/spritesheet.png\");\n  background-position: -10px -20px;\n  width: 20px;\n  height: 30px;\n}\n.sprite3 {\n  background-image: url(\"nested/dir/spritesheet.png\");\n  background-position: -30px -50px;\n  width: 50px;\n  height: 50px;\n}\n\r\n----------------------------824783805053781152870165--"
  },
  "response": {
    "httpVersion": "1.1",
    "headers": {
      "cache-control": "no-cache",
      "date": "Tue, 23 Dec 2014 09:03:39 GMT",
      "pragma": "no-cache",
      "transfer-encoding": "chunked",
      "content-language": "en",
      "content-type": "application/soap+xml;charset=utf-8",
      "server": "Jigsaw/2.3.0-beta2",
      "vary": "Accept-Language",
      "x-w3c-validator-errors": "0",
      "x-w3c-validator-status": "Valid"
    },
    "trailers": {},
    "statusCode": 200,
    "body": "<?xml version='1.0' encoding=\"utf-8\"?>\n<env:Envelope xmlns:env=\"http://www.w3.org/2003/05/soap-envelope\">\n    <env:Body>\n        <m:cssvalidationresponse\n            env:encodingStyle=\"http://www.w3.org/2003/05/soap-encoding\"\n            xmlns:m=\"http://www.w3.org/2005/07/css-validator\">\n            <m:uri>TextArea</m:uri>\n            <m:checkedby>http://jigsaw.w3.org/css-validator/</m:checkedby>\n            <m:csslevel>css3</m:csslevel>\n            <m:date>2014-12-23T09:03:39Z</m:date>\n            <m:validity>true</m:validity>\n            <m:result>\n                <m:errors xml:lang=\"en\">\n                    <m:errorcount>0</m:errorcount>\n    \n                </m:errors>\n                <m:warnings xml:lang=\"en\">\n                    <m:warningcount>0</m:warningcount>\n                </m:warnings>\n            </m:result>\n        </m:cssvalidationresponse>\n    </env:Body>\n</env:Envelope>\n\n"
  }
}